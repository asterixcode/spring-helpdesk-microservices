services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 20s
      retries: 3
    volumes:
      - ~/rabbitmq/helpdesk/data:/var/lib/rabbitmq/
      - ~/rabbitmq/helpdesk/logs:/var/log/rabbitmq
    networks:
      - helpdesk

  service-discovery:
    container_name: service-discovery
    build:
      context: ./service-discovery
      dockerfile: Dockerfile
    env_file:
      - ./service-discovery/.env
    ports:
      - "8761:8761"
    expose:
      - "8761"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://service-discovery:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - helpdesk

  config-server:
    container_name: config-server
    build:
      context: ./config-server
      dockerfile: Dockerfile
    env_file:
      - ./config-server/.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://config-server:8888/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      service-discovery:
        condition: service_healthy
    networks:
      - helpdesk

  api-gateway:
    container_name: api-gateway
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    env_file:
      - ./api-gateway/.env
    ports:
      - "8765:8765"
    expose:
      - "8765"
    depends_on:
      service-discovery:
        condition: service_healthy
      config-server:
        condition: service_healthy
    networks:
      - helpdesk

  auth-service-api:
    container_name: auth-service-api
    build:
      context: ./auth-service-api
      dockerfile: Dockerfile
    env_file:
      - ./auth-service-api/.env
    depends_on:
      service-discovery:
        condition: service_healthy
      config-server:
        condition: service_healthy
    networks:
      - helpdesk

  email-service:
    container_name: email-service
    build:
      context: ./email-service
      dockerfile: Dockerfile
    env_file:
      - ./email-service/.env
    depends_on:
      service-discovery:
        condition: service_healthy
      config-server:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - helpdesk

  user-service-api:
    container_name: user-service-api
    build:
      context: ./user-service-api
      dockerfile: Dockerfile
    env_file:
      - ./user-service-api/.env
    depends_on:
      service-discovery:
        condition: service_healthy
      config-server:
        condition: service_healthy
    networks:
      - helpdesk

  order-service-api:
    container_name: order-service-api
    build:
      context: ./order-service-api
      dockerfile: Dockerfile
    env_file:
      - ./order-service-api/.env
    depends_on:
      service-discovery:
        condition: service_healthy
      config-server:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - helpdesk

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    expose:
      - "6379"
    volumes:
      - redis_data:/data
    networks:
      - helpdesk

networks:
  helpdesk:
    driver: bridge

volumes:
  redis_data:
    driver: local